# Generated by Django 5.2.4 on 2025-08-01 04:38

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('ingestion', '0001_initial'),
        ('preprocessing', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='MLModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('model_type', models.CharField(choices=[('random_forest', 'Random Forest'), ('xgboost', 'XGBoost'), ('lightgbm', 'LightGBM'), ('catboost', 'CatBoost'), ('svm', 'Support Vector Machine'), ('logistic_regression', 'Logistic Regression'), ('linear_regression', 'Linear Regression'), ('neural_network', 'Neural Network'), ('knn', 'K-Nearest Neighbors'), ('decision_tree', 'Decision Tree'), ('gradient_boosting', 'Gradient Boosting'), ('ada_boost', 'AdaBoost'), ('elastic_net', 'Elastic Net'), ('ridge', 'Ridge Regression'), ('lasso', 'Lasso Regression')], max_length=50)),
                ('hyperparameters', models.JSONField(default=dict)),
                ('feature_columns', models.JSONField(default=list)),
                ('target_column', models.CharField(max_length=255)),
                ('training_started', models.DateTimeField(auto_now_add=True)),
                ('training_completed', models.DateTimeField(blank=True, null=True)),
                ('training_duration', models.FloatField(blank=True, null=True)),
                ('model_file', models.FileField(blank=True, null=True, upload_to='models/')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('training', 'Training'), ('completed', 'Completed'), ('failed', 'Failed')], default='pending', max_length=20)),
                ('dataset', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ingestion.dataset')),
                ('preprocessed_dataset', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='preprocessing.preprocesseddataset')),
            ],
        ),
        migrations.CreateModel(
            name='ModelComparison',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('comparison_metrics', models.JSONField(default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('best_model', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='best_in_comparison', to='modeling.mlmodel')),
                ('dataset', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ingestion.dataset')),
                ('mlmodel', models.ManyToManyField(to='modeling.mlmodel')),
            ],
        ),
        migrations.CreateModel(
            name='ModelEvaluation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('accuracy', models.FloatField(blank=True, null=True)),
                ('precision', models.FloatField(blank=True, null=True)),
                ('recall', models.FloatField(blank=True, null=True)),
                ('f1_score', models.FloatField(blank=True, null=True)),
                ('roc_auc', models.FloatField(blank=True, null=True)),
                ('mse', models.FloatField(blank=True, null=True)),
                ('mae', models.FloatField(blank=True, null=True)),
                ('r2_score', models.FloatField(blank=True, null=True)),
                ('cv_scores', models.JSONField(default=list)),
                ('cv_mean', models.FloatField(blank=True, null=True)),
                ('cv_std', models.FloatField(blank=True, null=True)),
                ('confusion_matrix', models.JSONField(default=list)),
                ('feature_importance', models.JSONField(default=dict)),
                ('evaluated_at', models.DateTimeField(auto_now_add=True)),
                ('model', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='modeling.mlmodel')),
            ],
        ),
    ]
